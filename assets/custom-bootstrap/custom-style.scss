@import "scss/functions";
@import "scss/variables";


$new-spacers: (
    6: $spacer * 4,
    7: $spacer * 5,
    8: $spacer * 6,
    9: $spacer * 7,
    10: $spacer * 8
);

$spacers: map-merge($spacers, $new-spacers);

$new-font-sizes: (
    supersmall: $font-size-base * .6,
    small: $font-size-base * .8,
    7: $font-size-base * 3,
    8: $font-size-base * 3.5,
    9: $font-size-base * 4,
    10: $font-size-base * 4.5,
);

$font-sizes: map-merge($font-sizes, $new-font-sizes);

$new-position-values: (
    0: 0,
    5: 5%,
    10: 10%,
    15: 15%,
    20: 20%,
    25: 25%,
    30: 30%,
    35: 35%,
    40: 40%,
    45: 45%,
    50: 50%,
    55: 55%,
    60: 60%,
    65: 65%,
    70: 70%,
    75: 75%,
    80: 80%,
    85: 85%,
    90: 90%,
    95: 95%,
    100: 100%
);

$position-values: map-merge($position-values, $new-position-values);


@import "scss/variables-dark";
@import "scss/maps";
@import "scss/mixins";
@import "scss/utilities";


$utilities: map-merge($utilities,
        ("width": map-merge(map-get($utilities, "width"),
                (values: map-merge(map-get(map-get($utilities, "width"), "values"),
                        (5: 5%,
                            10: 10%,
                            15: 15%,
                            20: 20%,
                            25: 25%,
                            30: 30%,
                            35: 35%,
                            40: 40%,
                            45: 45%,
                            50: 50%,
                            55: 55%,
                            60: 60%,
                            65: 65%,
                            70: 70%,
                            75: 75%,
                            80: 80%,
                            85: 85%,
                            90: 90%,
                            95: 95%,
                            100: 100%,
                        ),
                    ),
                ),
            ),
        ));


$utilities: map-merge($utilities,
        ("height": map-merge(map-get($utilities, "height"),
                (values: map-merge(map-get(map-get($utilities, "height"), "values"),
                        (5: 5%,
                            10: 10%,
                            15: 15%,
                            20: 20%,
                            25: 25%,
                            30: 30%,
                            35: 35%,
                            40: 40%,
                            45: 45%,
                            50: 50%,
                            55: 55%,
                            60: 60%,
                            65: 65%,
                            70: 70%,
                            75: 75%,
                            80: 80%,
                            85: 85%,
                            90: 90%,
                            95: 95%,
                            100: 100%,
                        ),
                    ),
                ),
            ),
        ));


* {
    box-sizing: border-box !important;
}

#logoSvg {
    width: 150px !important;
}

nav {
    position: fixed !important;
    top: 0;
    z-index: 1000 !important;
    width: 100% !important;
    background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0));
    transition-duration: 0.3s;
}

#logoSvg {
    fill: white;
}

.videoHero {
    height: 80vh;
    width: 100%;
    object-fit: cover;
    object-position: bottom;
    animation: blur 3s linear forwards;

    @media (max-width: 767.98px) {
        height: 50vh;
    }
}

@media (max-width: 767.98px) {
    .media {
        font-size: 1em !important;
    }
}

@keyframes blur {
    from {
        filter: brightness(100%);
    }

    20% {
        filter: brightness(100%);
    }

    100% {
        filter: brightness(50%);
    }
}

.logoHero {
    position: absolute;
    top: 20%;
    animation: opacity 3s linear forwards;

    @media (max-width: 767.98px) {
        top: 35%;

        & .mediaBtn {
            font-size: 1.1em !important;
        }
    }
}




@keyframes opacity {
    from {
        opacity: 0;
    }

    20% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}



.inputBlack::placeholder {
    color: white !important;
}

footer i,
footer a {
    transition-duration: 0.3s;
}


.colorful li:nth-child(1):hover i {
    color: #38569E !important;

}

.colorful li:nth-child(2):hover i {
    background: linear-gradient(152deg, rgba(121, 74, 222, 1) 0%, rgba(240, 92, 92, 1) 100%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 100%;
    background-position: left;

}

.colorful li:nth-child(3):hover i {
    color: #1DA0F1 !important;

}

.colorful li:nth-child(4):hover i {
    color: #FF0000 !important;

}


.white a:hover {
    color: white !important;
}


.cls-1 {
    fill: #ffde00;
}

.cls-2 {
    fill: #ffffff;
    transition-duration: 0.3s;
}

.btn-outline-warning {
    color: #ffde00 !important;
    border: 1px solid #ffde00 !important;

    &:hover {
        color: white !important;
        background-color: #ffde00 !important;
    }
}

.pointer {
    cursor: pointer;
    transition-duration: 0.3s; 

    &:hover {
        transform: scale(1.02)
    }
}

.pointerList {
    cursor: pointer;
    transition-duration: 0.3s;
    color: $secondary; 

    &:hover {
        color: black;
    }
}

.truncate-3-lines {
    display: -webkit-box !important;
    -webkit-box-orient: vertical !important;
    overflow: hidden !important;
    line-clamp: 3 !important;
    -webkit-line-clamp: 3 !important;
}

#nav {
    backdrop-filter: blur(50px) !important;
}

@import "scss/bootstrap.scss";